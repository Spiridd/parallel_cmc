PARCC = mpixlc
CC = $(PARCC)
# use only one FPU
CFLAGS = -qarch=450 -qtune=450
# matrix size
M = 2000
N = $(M)
# time constraint
TIME = 00:05:00
# bluegene mapping instructions
MAP = -env BG_MAPPING=XYZT
MODE = DUAL 
OMP_NUM_THREADS = 1
# I/O
F1 = ../out/A.bin
F2 = ../out/B.bin
F3 = ../out/C.bin
NNODES = 32
build: gen calc
run: generate calculate
generate: gen
# simple one-thread program, running on frontend
	@./gen $(M) $(N) $(F1) $(F2)
gen: gen.o fun.o
	@$(CC) -o gen gen.o fun.o $(CFLAGS)
fun.o: fun.c
	@$(CC) -c -o fun.o fun.c $(CFLAGS)
gen.o: gen.c
	@$(CC) -c -o gen.o gen.c $(CFLAGS)
calc: main.o matrix.o
	@$(PARCC) -o calc main.o matrix.o $(CFLAGS)
main.o: main.c
	@$(PARCC) -c -o main.o main.c $(CFLAGS)
matrix.o: matrix.c
	@$(PARCC) -c -o matrix.o matrix.c $(CFLAGS)
calculate: calc
	@mpisubmit.bg -w $(TIME) -n $(NNODES) -m $(MODE) $(MAP) -e "OMP_NUM_THREADS=$(OMP_NUM_THREADS)" ./calc $(F1) $(F2) $(F3)
clean:
	-@rm *.o gen calc $(F1) $(F2) $(F3)
